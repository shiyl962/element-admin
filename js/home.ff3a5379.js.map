{"version":3,"sources":["webpack:///./src/views/Home.vue?cf01","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?ef24","webpack:///./src/views/Home.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","_v","attrs","_m","staticRenderFns","name","component"],"mappings":"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","file":"js/home.ff3a5379.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('h1',{staticStyle:{\"font-size\":\"2em\"}},[_vm._v(\"介绍\")]),_c('p',[_vm._v(\" 这是一个干净的，简单的后台管理系统的前端模板，参考了 \"),_c('el-link',{attrs:{\"type\":\"primary\",\"href\":\"https://panjiachen.gitee.io/vue-element-admin-site/zh/\",\"target\":\"_blank\"}},[_vm._v(\"vue-element-admin\")]),_vm._v(\" 的部分代码，特别是权限路由做了很大的改动。 \")],1),_c('p',[_vm._v(\" 它也是基于 \"),_c('el-link',{attrs:{\"type\":\"primary\",\"href\":\"https://cn.vuejs.org/\",\"target\":\"_blank\"}},[_vm._v(\"vue\")]),_vm._v(\" + \"),_c('el-link',{attrs:{\"type\":\"primary\",\"href\":\"https://element.eleme.cn/#/zh-CN/\",\"target\":\"_blank\"}},[_vm._v(\"element-ui\")]),_vm._v(\" 实现。目前没有集成太多功能，所以也没什么好配置的，简单来说就是拿来即用。 \")],1),_c('h2',[_vm._v(\"功能\")]),_c('ul',{staticStyle:{\"padding-left\":\"20px\"}},[_vm._m(0),_c('li',[_c('h4',[_vm._v(\"路由缓存\")]),_c('p',[_vm._v(\" 路由缓存也是使用的 keep-alive，和tabs导航相对应，这部分代码基本上都是借鉴 \"),_c('el-link',{attrs:{\"type\":\"primary\",\"href\":\"https://panjiachen.gitee.io/vue-element-admin-site/zh/\",\"target\":\"_blank\"}},[_vm._v(\"vue-element-admin\")]),_vm._v(\"，简单说一下思路：每次路由跳转时，判断当前路由的meta里是否存在title和name，如果有则添加到store里。刷新的时候先跳转到 redirect 页面，在这里先删除缓存再重新进入。 \")],1)]),_c('li',[_c('h4',[_vm._v(\"换肤\")]),_c('p',[_vm._v(\" 换肤原理很简单，就是两套element主题，一套有命名空间，一套没有，切换的时候动态在body上修改就行了，具体实现可以参考：\"),_c('el-link',{attrs:{\"type\":\"primary\",\"href\":\"https://panjiachen.gitee.io/vue-element-admin-site/zh/guide/advanced/theme.html\",\"target\":\"_blank\"}},[_vm._v(\"https://panjiachen.gitee.io/vue-element-admin-site/zh/guide/advanced/theme.html\")])],1),_c('p',[_vm._v(\"还有一种只能切换主题色：我觉得没有意义，就没做。\")])]),_vm._m(1)]),_c('h2',[_vm._v(\"布局\")]),_c('ul',{staticStyle:{\"padding-left\":\"20px\"}},[_vm._m(2),_vm._m(3),_vm._m(4),_c('li',[_vm._v(\"锁屏\")]),_c('li',[_c('h4',[_vm._v(\"全屏\")]),_c('p',[_c('el-link',{attrs:{\"type\":\"primary\",\"href\":\"https://github.com/sindresorhus/screenfull.js\",\"target\":\"_blank\"}},[_vm._v(\"screenfull.js\")])],1)]),_vm._m(5),_c('li',[_c('h4',[_vm._v(\"进度条\")]),_c('p',[_c('el-link',{attrs:{\"type\":\"primary\",\"href\":\"https://github.com/rstacruz/nprogress\",\"target\":\"_blank\"}},[_vm._v(\"nprogress\")])],1),_c('p',[_vm._v(\" 这是一个虚假的进度条，大部分网站用的都是这个，前端是不可能知道真正的进度的，使用它的目的仅仅是提升用户体验。目前只用在了页面跳转中，如果你愿意，还可以使用在请求中。 \")])])]),_c('h2',[_vm._v(\"模拟登录\")]),_c('p',[_vm._v(\" 已清除。。。 \")])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',[_c('h4',[_vm._v(\"权限路由\")]),_c('p',[_vm._v(\" 路由权限应该是任何一个后台管理系统都逃不掉的功能了，虽然实现方式总共就那几个技术点，但是每个人真正做起来却也是各种各样。 \")]),_c('p',[_vm._v(\" 此系统中使用逻辑是：前端会先挂载所有的路由，在需要权限的路由的 meta 属性中会标记 permission 为 false，表示进入此页面需要权限且目前的权限为 false，然后在全局路由守卫中添加拦截，拦截逻辑为： 如果侧边栏菜单列表为空则请求并等待列表返回，返回之后侧边栏菜单列表会以路径匹配和系统路由表做个映射，将路由中有权限的路由的permission改为true，然后再进入， 如果侧边栏菜单不为空，则表示已经映射过路由，permission为false时直接重定向到401。 \")]),_c('p',[_vm._v(\" 这样做的目的是我想将侧边栏菜单完全交给后端控制，包括菜单的嵌套关系，菜单名称，icon。还有就是角色数量不受限制。 \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',[_c('h4',[_vm._v(\"错误页面\")]),_c('p',[_vm._v(\" 404和401，如果你看了代码，你会发现我将这两个页面的permission设为true，原因是这两个页面是在layout里打开的，如果不设置此属性，用户就有可能在未登录的情况下直接进入layout，感觉不太合理。 \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',[_c('h4',[_vm._v(\"自适应侧边栏\")]),_c('p',[_vm._v(\" 在屏幕宽度小于1200时，侧边栏会以另外一个方式收起。 \")]),_c('p',[_vm._v(\" 侧边栏里的菜单完全是后端返回的，原因上面也说了，数据结构为一个数组开始的树。 \")]),_c('div',[_c('div',[_vm._v(\"配置参数：\")]),_c('ul',[_c('li',[_vm._v(\"path：页面路径\")]),_c('li',[_vm._v(\"hidden：为true时不显示为菜单。\")]),_c('li',[_vm._v(\"affix：tabs导航不能被删除\")]),_c('li',[_vm._v(\"title：标题\")]),_c('li',[_vm._v(\"icon：图标\")]),_c('li',[_vm._v(\" permission：如果没有此属性，前端会默认为true，所以它只有在等于布尔false时才有意义，此字段存在的意义在于某些系统可能需要向用户展示无权限页面的入口，以引导用户升级 \")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',[_c('h4',[_vm._v(\"tabs导航\")]),_c('ul',[_c('li',[_vm._v(\" 这应该算是此模板中比较复杂的一个板块了，和路由缓存关联，支持鼠标滚轮滚动，右键菜单（刷新，关闭，关闭其他，关闭所有），拖动排序，当前tab自动靠中。 \")]),_c('li',[_vm._v(\" 因为所以tab页面都会有缓存，所以如果你通过name传参的话是可能会失效的，因为就算你传过去了，它也不能触发任何操作，除非你在activated钩子中做处理。 \")]),_c('li',[_vm._v(\" 我对?分割的传参做了一些处理，如果当前页面已经在tabs中，后面再携带不同参数的进入时，会先删除缓存再进入，并且替换掉之前的tab(因为页面路径已经改变)。 \")]),_c('li',[_vm._v(\" 依然有bug，当假如从/about进入/about?id=555时，不会触发刷新，因为路由压根就没改变，我觉得这不是一个大问题，后期再决定要不要优化。 \")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',[_c('h4',[_vm._v(\"面包屑\")]),_c('p',[_vm._v(\"一个简单的element组件，会优先使用后端返回的路由表的嵌套规则\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('li',[_c('h4',[_vm._v(\"回到顶部\")]),_c('p',[_vm._v(\"一个element组件\")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"home\">\n    <h1 style=\"font-size:2em\">介绍</h1>\n    <p>\n      这是一个干净的，简单的后台管理系统的前端模板，参考了\n      <el-link\n        type=\"primary\"\n        href=\"https://panjiachen.gitee.io/vue-element-admin-site/zh/\"\n        target=\"_blank\"\n        >vue-element-admin</el-link\n      >\n      的部分代码，特别是权限路由做了很大的改动。\n    </p>\n    <p>\n      它也是基于\n      <el-link type=\"primary\" href=\"https://cn.vuejs.org/\" target=\"_blank\"\n        >vue</el-link\n      >\n      +\n      <el-link\n        type=\"primary\"\n        href=\"https://element.eleme.cn/#/zh-CN/\"\n        target=\"_blank\"\n        >element-ui</el-link\n      >\n      实现。目前没有集成太多功能，所以也没什么好配置的，简单来说就是拿来即用。\n    </p>\n\n    <h2>功能</h2>\n    <ul style=\"padding-left:20px\">\n      <li>\n        <h4>权限路由</h4>\n        <p>\n          路由权限应该是任何一个后台管理系统都逃不掉的功能了，虽然实现方式总共就那几个技术点，但是每个人真正做起来却也是各种各样。\n        </p>\n        <p>\n          此系统中使用逻辑是：前端会先挂载所有的路由，在需要权限的路由的 meta\n          属性中会标记 permission 为 false，表示进入此页面需要权限且目前的权限为\n          false，然后在全局路由守卫中添加拦截，拦截逻辑为：\n          如果侧边栏菜单列表为空则请求并等待列表返回，返回之后侧边栏菜单列表会以路径匹配和系统路由表做个映射，将路由中有权限的路由的permission改为true，然后再进入，\n          如果侧边栏菜单不为空，则表示已经映射过路由，permission为false时直接重定向到401。\n        </p>\n        <p>\n          这样做的目的是我想将侧边栏菜单完全交给后端控制，包括菜单的嵌套关系，菜单名称，icon。还有就是角色数量不受限制。\n        </p>\n      </li>\n      <li>\n        <h4>路由缓存</h4>\n        <p>\n          路由缓存也是使用的\n          keep-alive，和tabs导航相对应，这部分代码基本上都是借鉴\n          <el-link\n            type=\"primary\"\n            href=\"https://panjiachen.gitee.io/vue-element-admin-site/zh/\"\n            target=\"_blank\"\n            >vue-element-admin</el-link\n          >，简单说一下思路：每次路由跳转时，判断当前路由的meta里是否存在title和name，如果有则添加到store里。刷新的时候先跳转到\n          redirect 页面，在这里先删除缓存再重新进入。\n        </p>\n      </li>\n      <li>\n        <h4>换肤</h4>\n        <p>\n          换肤原理很简单，就是两套element主题，一套有命名空间，一套没有，切换的时候动态在body上修改就行了，具体实现可以参考：<el-link\n            type=\"primary\"\n            href=\"https://panjiachen.gitee.io/vue-element-admin-site/zh/guide/advanced/theme.html\"\n            target=\"_blank\"\n            >https://panjiachen.gitee.io/vue-element-admin-site/zh/guide/advanced/theme.html</el-link\n          >\n        </p>\n        <p>还有一种只能切换主题色：我觉得没有意义，就没做。</p>\n      </li>\n      <li>\n        <h4>错误页面</h4>\n        <p>\n          404和401，如果你看了代码，你会发现我将这两个页面的permission设为true，原因是这两个页面是在layout里打开的，如果不设置此属性，用户就有可能在未登录的情况下直接进入layout，感觉不太合理。\n        </p>\n      </li>\n    </ul>\n    <h2>布局</h2>\n    <ul style=\"padding-left:20px\">\n      <li>\n        <h4>自适应侧边栏</h4>\n        <p>\n          在屏幕宽度小于1200时，侧边栏会以另外一个方式收起。\n        </p>\n        <p>\n          侧边栏里的菜单完全是后端返回的，原因上面也说了，数据结构为一个数组开始的树。\n        </p>\n        <div>\n          <div>配置参数：</div>\n          <ul>\n            <li>path：页面路径</li>\n            <li>hidden：为true时不显示为菜单。</li>\n            <li>affix：tabs导航不能被删除</li>\n            <li>title：标题</li>\n            <li>icon：图标</li>\n            <li>\n              permission：如果没有此属性，前端会默认为true，所以它只有在等于布尔false时才有意义，此字段存在的意义在于某些系统可能需要向用户展示无权限页面的入口，以引导用户升级\n            </li>\n          </ul>\n        </div>\n      </li>\n      <li>\n        <h4>tabs导航</h4>\n        <ul>\n          <li>\n            这应该算是此模板中比较复杂的一个板块了，和路由缓存关联，支持鼠标滚轮滚动，右键菜单（刷新，关闭，关闭其他，关闭所有），拖动排序，当前tab自动靠中。\n          </li>\n          <li>\n            因为所以tab页面都会有缓存，所以如果你通过name传参的话是可能会失效的，因为就算你传过去了，它也不能触发任何操作，除非你在activated钩子中做处理。\n          </li>\n          <li>\n            我对?分割的传参做了一些处理，如果当前页面已经在tabs中，后面再携带不同参数的进入时，会先删除缓存再进入，并且替换掉之前的tab(因为页面路径已经改变)。\n          </li>\n          <li>\n            依然有bug，当假如从/about进入/about?id=555时，不会触发刷新，因为路由压根就没改变，我觉得这不是一个大问题，后期再决定要不要优化。\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>面包屑</h4>\n        <p>一个简单的element组件，会优先使用后端返回的路由表的嵌套规则</p>\n      </li>\n      <li>锁屏</li>\n      <li>\n        <h4>全屏</h4>\n        <p>\n          <el-link\n            type=\"primary\"\n            href=\"https://github.com/sindresorhus/screenfull.js\"\n            target=\"_blank\"\n            >screenfull.js</el-link\n          >\n        </p>\n      </li>\n      <li>\n        <h4>回到顶部</h4>\n        <p>一个element组件</p>\n      </li>\n      <li>\n        <h4>进度条</h4>\n        <p>\n          <el-link\n            type=\"primary\"\n            href=\"https://github.com/rstacruz/nprogress\"\n            target=\"_blank\"\n            >nprogress</el-link\n          >\n        </p>\n        <p>\n          这是一个虚假的进度条，大部分网站用的都是这个，前端是不可能知道真正的进度的，使用它的目的仅仅是提升用户体验。目前只用在了页面跳转中，如果你愿意，还可以使用在请求中。\n        </p>\n      </li>\n    </ul>\n    <h2>模拟登录</h2>\n    <p>\n      已清除。。。\n    </p>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n\nexport default {\n  name: \"Home\",\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=4623faae&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}